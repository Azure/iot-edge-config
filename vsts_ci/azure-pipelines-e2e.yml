# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

stages:
- stage: E2ETest
  displayName: E2E Tests
  jobs:
  - job: SetupScript
    steps:
    - script: |
        sudo apt update
        sudo apt install jq
      displayName: 'Install jq'
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'Azure IoT DDE team subscription(377c3343-75bb-4244-98a3-0fb84a830c4b)'
        scriptType: 'ps'
        scriptLocation: 'inlineScript'
        inlineScript: |
          Write-Host "##vso[task.setvariable variable=SpId;]$env:servicePrincipalId"
          Write-Host "##vso[task.setvariable variable=SpKey;]$env:servicePrincipalKey"
          Write-Host "##vso[task.setvariable variable=TenantId;]$env:tenantId"
          Write-Host "##vso[task.setvariable variable=TestVar;]JustForTest"
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          # Write your PowerShell commands here.
          Write-Host "Hello World"
          Write-Host $env:SpId
          Write-Host $env:SpKey
          Write-Host $env:TenantId
          Write-Host $env:TestVar
#    - task: AzureKeyVault@1
#      inputs:
#        azureSubscription: 'Azure IoT DDE team subscription(377c3343-75bb-4244-98a3-0fb84a830c4b)'
#        KeyVaultName: 'azure-iot-edgetools-kv'
#        SecretsFilter: 'ddeiotedgetestpw'
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'Connection to Pipeline resources for IoT Edge Config'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az upgrade
          az extension add --name azure-iot
          az --version
          az login -u "ddeiotedgetest@microsoft.com" -p "$(ddeiotedgetestpw)"
          az account set -s $(AzureSubscriptionId)
      displayName: 'Set Azure resources'
    
  - job: LinuxE2ETests
    pool:
      vmImage: ubuntu-18.04
    steps: 
    - template: continuous-e2e.yml
    dependsOn: SetupScript
    condition: succeeded()

  - job: RaspberryPiE2ETests
    pool:
      vmImage: ubuntu-latest
    steps:
    - template: continuous-e2e.yml
    dependsOn: SetupScript
    condition: succeeded()
  
