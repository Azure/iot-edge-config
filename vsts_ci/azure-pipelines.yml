# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

stages:
- stage: UnitTest
  displayName: Unit Tests
  jobs:
  - job: SetupScript
    steps:
    - script: echo Hello, world!
      displayName: 'Run a one-line script'
  
  - job: LinuxUnitTests
    pool:
      vmImage: ubuntu-18.04
    steps: 
    - template: linux/continuous-linux.yml

  - job: RaspberryPiUnitTests
    pool:
      vmImage: ubuntu-latest
    steps:
    - template: raspi/continuous-raspi.yml

  - job: PublishFile
    dependsOn:
      - LinuxUnitTests
      - RaspberryPiUnitTests
    condition: and(succeeded('LinuxUnitTests'), succeeded('RaspberryPiUnitTests'))      
    steps:
    - script: |  
        mkdir dest
        cp src/azure-iot-edge-installer.sh dest/ 
      displayName: Create dest/ directory
    - task: CopyFiles@2
      inputs:
        SourceFolder: 'dest'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
      displayName: "Copy files to build artifact staging directory"
    
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'build-artifact-drop'
        publishLocation: 'Container'

  - job: GithubRelease
    steps:
    - task: GitHubRelease@1
      displayName: 'GitHub release (create)'
      inputs:
        gitHubConnection: 'github connection 1'
        tagPattern: '^v?[0-9]+\.[0-9]+\.[0-9]+-rc[0-9]+$'
        assets: '$(Build.ArtifactStagingDirectory)/azure-iot-edge-installer.sh'
        isDraft: true
